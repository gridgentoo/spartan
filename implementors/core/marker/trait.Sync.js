(function() {var implementors = {};
implementors["spartan"] = [{"text":"impl Sync for ResponseError","synthetic":true,"types":[]},{"text":"impl Sync for QueueError","synthetic":true,"types":[]},{"text":"impl Sync for StartCommandError","synthetic":true,"types":[]},{"text":"impl Sync for StartCommand","synthetic":true,"types":[]},{"text":"impl Sync for InitCommandError","synthetic":true,"types":[]},{"text":"impl Sync for InitCommand","synthetic":true,"types":[]},{"text":"impl Sync for ReplicaCommand","synthetic":true,"types":[]},{"text":"impl Sync for Command","synthetic":true,"types":[]},{"text":"impl Sync for Server","synthetic":true,"types":[]},{"text":"impl Sync for ManagerError","synthetic":true,"types":[]},{"text":"impl&lt;'c&gt; Sync for Manager&lt;'c&gt;","synthetic":true,"types":[]},{"text":"impl&lt;DB&gt; Sync for Queue&lt;DB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DB: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'c&gt; Sync for Log&lt;'c&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PersistMode","synthetic":true,"types":[]},{"text":"impl&lt;'c&gt; Sync for Snapshot&lt;'c&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PersistenceError","synthetic":true,"types":[]},{"text":"impl&lt;'msg&gt; Sync for Event&lt;'msg&gt;","synthetic":true,"types":[]},{"text":"impl Sync for ReplicationStorage","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'r&gt; Sync for PrimaryRequest&lt;'c, 'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c&gt; Sync for ReplicaRequest&lt;'c&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'r&gt; Sync for Request&lt;'c, 'r&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PrimaryError","synthetic":true,"types":[]},{"text":"impl&lt;'s, T&gt; Sync for RecvIndex&lt;'s, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'s, T&gt; Sync for BatchAskIndex&lt;'s, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'s, T&gt; Sync for Sync&lt;'s, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Stream&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for StreamPool&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for PrimaryStorage","synthetic":true,"types":[]},{"text":"impl Sync for ReplicaError","synthetic":true,"types":[]},{"text":"impl Sync for ReplicaStorage","synthetic":true,"types":[]},{"text":"impl&lt;'m, 'c, T&gt; Sync for ReplicaSocket&lt;'m, 'c, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'c, S&gt; Sync for Node&lt;'c, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for DeleteRequest","synthetic":true,"types":[]},{"text":"impl Sync for DeleteResponse","synthetic":true,"types":[]},{"text":"impl&lt;'m&gt; Sync for Timeout&lt;'m&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'m&gt; Sync for Time&lt;'m&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'m&gt; Sync for PopResponse&lt;'m&gt;","synthetic":true,"types":[]},{"text":"impl Sync for PushRequest","synthetic":true,"types":[]},{"text":"impl Sync for RequeueRequest","synthetic":true,"types":[]},{"text":"impl Sync for SizeResponse","synthetic":true,"types":[]},{"text":"impl Sync for ServerError","synthetic":true,"types":[]},{"text":"impl Sync for AccessError","synthetic":true,"types":[]},{"text":"impl Sync for AccessMiddleware","synthetic":true,"types":[]},{"text":"impl Sync for Key","synthetic":true,"types":[]},{"text":"impl Sync for Primary","synthetic":true,"types":[]},{"text":"impl Sync for Replica","synthetic":true,"types":[]},{"text":"impl Sync for Replication","synthetic":true,"types":[]},{"text":"impl Sync for ReplicationConfig","synthetic":true,"types":[]},{"text":"impl Sync for Persistence","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PersistenceConfig&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Config&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BincodeCodec","synthetic":true,"types":[]}];
implementors["spartan_lib"] = [{"text":"impl&lt;M&gt; Sync for TreeDatabase&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as Identifiable&gt;::Id: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as Sortable&gt;::Sort: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Sync for VecDatabase&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for BuilderError","synthetic":true,"types":[]},{"text":"impl Sync for MessageBuilder","synthetic":true,"types":[]},{"text":"impl Sync for Timeout","synthetic":true,"types":[]},{"text":"impl Sync for Offset","synthetic":true,"types":[]},{"text":"impl Sync for Time","synthetic":true,"types":[]},{"text":"impl Sync for Status","synthetic":true,"types":[]},{"text":"impl Sync for State","synthetic":true,"types":[]},{"text":"impl Sync for Message","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
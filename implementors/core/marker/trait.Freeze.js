(function() {var implementors = {};
implementors["spartan"] = [{"text":"impl Freeze for ResponseError","synthetic":true,"types":[]},{"text":"impl Freeze for QueueError","synthetic":true,"types":[]},{"text":"impl Freeze for StartCommandError","synthetic":true,"types":[]},{"text":"impl Freeze for StartCommand","synthetic":true,"types":[]},{"text":"impl Freeze for InitCommandError","synthetic":true,"types":[]},{"text":"impl Freeze for InitCommand","synthetic":true,"types":[]},{"text":"impl Freeze for ReplicaCommand","synthetic":true,"types":[]},{"text":"impl Freeze for Command","synthetic":true,"types":[]},{"text":"impl Freeze for Server","synthetic":true,"types":[]},{"text":"impl Freeze for ManagerError","synthetic":true,"types":[]},{"text":"impl&lt;'c&gt; Freeze for Manager&lt;'c&gt;","synthetic":true,"types":[]},{"text":"impl&lt;DB&gt; !Freeze for Queue&lt;DB&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c&gt; !Freeze for Log&lt;'c&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for PersistMode","synthetic":true,"types":[]},{"text":"impl&lt;'c&gt; Freeze for Snapshot&lt;'c&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for PersistenceError","synthetic":true,"types":[]},{"text":"impl&lt;'msg&gt; Freeze for Event&lt;'msg&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ReplicationStorage","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'r&gt; Freeze for PrimaryRequest&lt;'c, 'r&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c&gt; Freeze for ReplicaRequest&lt;'c&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'r&gt; Freeze for Request&lt;'c, 'r&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for PrimaryError","synthetic":true,"types":[]},{"text":"impl&lt;'s, T&gt; Freeze for RecvIndex&lt;'s, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'s, T&gt; Freeze for BatchAskIndex&lt;'s, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'s, T&gt; Freeze for Sync&lt;'s, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for Stream&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for StreamPool&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for PrimaryStorage","synthetic":true,"types":[]},{"text":"impl Freeze for ReplicaError","synthetic":true,"types":[]},{"text":"impl Freeze for ReplicaStorage","synthetic":true,"types":[]},{"text":"impl&lt;'m, 'c, T&gt; Freeze for ReplicaSocket&lt;'m, 'c, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'c, S&gt; Freeze for Node&lt;'c, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for DeleteRequest","synthetic":true,"types":[]},{"text":"impl Freeze for DeleteResponse","synthetic":true,"types":[]},{"text":"impl&lt;'m&gt; Freeze for Timeout&lt;'m&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'m&gt; Freeze for Time&lt;'m&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'m&gt; Freeze for PopResponse&lt;'m&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for PushRequest","synthetic":true,"types":[]},{"text":"impl Freeze for RequeueRequest","synthetic":true,"types":[]},{"text":"impl Freeze for SizeResponse","synthetic":true,"types":[]},{"text":"impl Freeze for ServerError","synthetic":true,"types":[]},{"text":"impl Freeze for AccessError","synthetic":true,"types":[]},{"text":"impl Freeze for AccessMiddleware","synthetic":true,"types":[]},{"text":"impl Freeze for Key","synthetic":true,"types":[]},{"text":"impl Freeze for Primary","synthetic":true,"types":[]},{"text":"impl Freeze for Replica","synthetic":true,"types":[]},{"text":"impl Freeze for Replication","synthetic":true,"types":[]},{"text":"impl Freeze for ReplicationConfig","synthetic":true,"types":[]},{"text":"impl Freeze for Persistence","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for PersistenceConfig&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Freeze for Config&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BincodeCodec","synthetic":true,"types":[]}];
implementors["spartan_lib"] = [{"text":"impl&lt;M&gt; Freeze for TreeDatabase&lt;M&gt;","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Freeze for VecDatabase&lt;M&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for BuilderError","synthetic":true,"types":[]},{"text":"impl Freeze for MessageBuilder","synthetic":true,"types":[]},{"text":"impl Freeze for Timeout","synthetic":true,"types":[]},{"text":"impl Freeze for Offset","synthetic":true,"types":[]},{"text":"impl Freeze for Time","synthetic":true,"types":[]},{"text":"impl Freeze for Status","synthetic":true,"types":[]},{"text":"impl Freeze for State","synthetic":true,"types":[]},{"text":"impl Freeze for Message","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
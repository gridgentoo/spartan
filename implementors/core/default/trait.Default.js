(function() {var implementors = {};
implementors["spartan"] = [{"text":"impl&lt;DB&gt; Default for Queue&lt;DB&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;DB: Default,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl Default for PrimaryStorage","synthetic":false,"types":[]},{"text":"impl Default for ReplicaStorage","synthetic":false,"types":[]},{"text":"impl&lt;'c, S:&nbsp;Default&gt; Default for Node&lt;'c, S&gt;","synthetic":false,"types":[]},{"text":"impl Default for PersistenceConfig&lt;'_&gt;","synthetic":false,"types":[]},{"text":"impl Default for Config&lt;'_&gt;","synthetic":false,"types":[]},{"text":"impl Default for BincodeCodec","synthetic":false,"types":[]}];
implementors["spartan_lib"] = [{"text":"impl&lt;M&gt; Default for TreeDatabase&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: Identifiable + Sortable,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;M as Identifiable&gt;::Id: Hash,&nbsp;</span>","synthetic":false,"types":[]},{"text":"impl&lt;M&gt; Default for VecDatabase&lt;M&gt;","synthetic":false,"types":[]},{"text":"impl Default for MessageBuilder","synthetic":false,"types":[]},{"text":"impl Default for Status","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()
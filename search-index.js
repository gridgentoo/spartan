var searchIndex = JSON.parse('{\
"spartan":{"doc":"","i":[[0,"actions","spartan","Route actions",null,null],[0,"clear","spartan::actions","Clear queue",null,null],[5,"clear","spartan::actions::clear","Clear queue.",null,[[["arc",3],["manager",3],["string",3]]]],[0,"delete","spartan::actions","Delete message from queue",null,null],[5,"delete","spartan::actions::delete","Delete message from queue.",null,[[["manager",3],["arc",3],["string",3],["deleterequest",3]]]],[0,"pop","spartan::actions","Pop message from queue",null,null],[5,"pop","spartan::actions::pop","Pop message from queue.",null,[[["arc",3],["manager",3],["string",3]]]],[0,"push","spartan::actions","Push message to queue",null,null],[5,"push","spartan::actions::push","Push message to queue.",null,[[["manager",3],["pushrequest",3],["arc",3],["string",3]]]],[0,"requeue","spartan::actions","Requeue message back",null,null],[5,"requeue","spartan::actions::requeue","Requeues message back to queue.",null,[[["requeuerequest",3],["manager",3],["arc",3],["string",3]]]],[0,"size","spartan::actions","Get queue size",null,null],[5,"size","spartan::actions::size","Get queue size.",null,[[["arc",3],["manager",3],["string",3]]]],[6,"Result","spartan::actions","",null,null],[3,"ResponseError","","",null,null],[12,"status","","",0,null],[12,"error","","",0,null],[8,"RespondableError","","",null,null],[11,"status_code","","",1,[[],["statuscode",3]]],[4,"QueueError","","",null,null],[13,"NoMessageAvailable","","",2,null],[13,"MessageNotFound","","",2,null],[13,"MessageCompose","","",2,null],[0,"cli","spartan","CLI",null,null],[0,"commands","spartan::cli","CLI commands",null,null],[0,"start","spartan::cli::commands","<code>start</code> command",null,null],[4,"StartCommandError","spartan::cli::commands::start","",null,null],[13,"ConfigFileError","","",3,null],[13,"HttpServerError","","",3,null],[13,"PersistenceError","","",3,null],[3,"StartCommand","","",null,null],[12,"host","","Server host",4,null],[11,"host","","",4,[[],["socketaddr",4]]],[11,"dispatch","","",4,[[["server",3]]]],[0,"init","spartan::cli::commands","<code>init</code> command",null,null],[4,"InitCommandError","spartan::cli::commands::init","",null,null],[13,"ConfigSerializationError","","",5,null],[13,"ConfigWriteError","","",5,null],[13,"MissingConfigText","","",5,null],[13,"IncorrectConfig","","",5,null],[13,"DirectoryCreateError","","",5,null],[3,"InitCommand","","",null,null],[12,"editor","","",6,null],[11,"dispatch","","",6,[[["server",3]]]],[0,"replica","spartan::cli::commands","<code>replica</code> command",null,null],[3,"ReplicaCommand","spartan::cli::commands::replica","",null,null],[11,"dispatch","","",7,[[["server",3]]]],[4,"Command","spartan::cli","MQ server",null,null],[13,"Start","","",8,null],[13,"Init","","",8,null],[13,"Replica","","",8,null],[3,"Server","","Server with config and selected command",null,null],[12,"config","","Server configuration path",9,null],[12,"loaded_config","","Loaded server configuration",9,null],[12,"command","","",9,null],[11,"load_config","","Load configuration",9,[[]]],[11,"config","","",9,[[],[["config",3],["option",4]]]],[11,"config_path","","Get configuration file path",9,[[],["path",3]]],[11,"command","","Get CLI command, that started server",9,[[],["command",4]]],[0,"node","spartan","Node",null,null],[0,"manager","spartan::node","Node manager",null,null],[4,"ManagerError","spartan::node::manager","",null,null],[13,"QueueNotFound","","",10,null],[3,"Manager","","Node manager",null,null],[12,"config","","Server config",11,null],[12,"node","","Node",11,null],[11,"new","","Create new manager without node",11,[[["config",3]],["manager",3]]],[11,"queue","","Obtain queue from local node",11,[[],[["queue",3],["result",4],["managererror",4]]]],[11,"config","","",11,[[],["config",3]]],[11,"node","","",11,[[],["node",3]]],[11,"load_from_fs","","",11,[[]]],[11,"snapshot","","",11,[[]]],[11,"log","","",11,[[["event",4]]]],[11,"shutdown","","Prepare [<code>Manager</code>] for shutdown process",11,[[]]],[0,"queue","spartan::node","Queue",null,null],[3,"Queue","spartan::node::queue","",null,null],[12,"database","","Inner database",12,null],[12,"replication_storage","","Replication storage None if replication is not enabled",12,null],[11,"new","","",12,[[["replicationstorage",4],["option",4]],["queue",3]]],[11,"database","","",12,[[]]],[11,"replication_storage","","",12,[[]]],[11,"prepare_replication","","",12,[[]]],[11,"log_event","","",12,[[["event",4],["manager",3]]]],[0,"persistence","spartan::node","Log-based and snapshot persistence",null,null],[0,"log","spartan::node::persistence","Log-based persistence",null,null],[17,"QUEUE_FILE","spartan::node::persistence::log","Queue log file name",null,null],[17,"QUEUE_COMPACTION_FILE","","Queue compacted log file name",null,null],[3,"Log","","",null,null],[12,"config","","Persistence config",13,null],[12,"snapshot","","Internal instance of [<code>Snapshot</code>] driver",13,null],[11,"new","","",13,[[["persistenceconfig",3]]]],[11,"make_log_entry","","Make log entry from serializable source",13,[[],[["vec",3],["result",4],["persistenceerror",4]]]],[11,"parse_log","","Get buffer of log entries from byte source",13,[[]]],[11,"append","","Appends make_log_entry result of <code>source</code> to <code>destination</code>",13,[[]]],[11,"load","","Get log entries from <code>source</code> log file using parse_log",13,[[]]],[11,"persist_event","","Append single event to <code>source</code> log file (usually queue …",13,[[["event",4]]]],[11,"load_queue","","Restore database events from <code>source</code> log file (usually …",13,[[]]],[11,"prune","","Prune <code>queue</code> log file",13,[[]]],[11,"get_snapshot","","Get shared [<code>Snapshot</code>] instance",13,[[],["snapshot",3]]],[0,"snapshot","spartan::node::persistence","Snapshot-based persistence",null,null],[17,"QUEUE_FILE","spartan::node::persistence::snapshot","",null,null],[17,"REPLICATION_FILE","","",null,null],[4,"PersistMode","","Snapshot persistence modes",null,null],[13,"Queue","","Persist whole queue (both DB and replication log)",14,null],[13,"Replication","","Persist only replication log",14,null],[3,"Snapshot","","",null,null],[12,"config","","Persistence config",15,null],[11,"new","","",15,[[["persistenceconfig",3]]]],[11,"persist","","Serialize <code>source</code> into <code>destination</code>.",15,[[]]],[11,"load","","Load serialized database from <code>source</code>",15,[[]]],[11,"persist_queue","","Persist queue with provided [<code>PersistMode</code>]",15,[[["queue",3],["persistmode",4]]]],[11,"load_queue","","Deserialize queue from file",15,[[]]],[4,"PersistenceError","spartan::node::persistence","Errors, that may occur during persistence process",null,null],[13,"InvalidFileFormat","","",16,null],[13,"SerializationError","","",16,null],[13,"LogEntryTooBig","","",16,null],[13,"FileOpenError","","",16,null],[13,"GenericIoError","","",16,null],[0,"event","spartan::node","Database event",null,null],[4,"Event","spartan::node::event","Database event",null,null],[13,"Push","","",17,null],[13,"Pop","","",17,null],[13,"Requeue","","",17,null],[13,"Delete","","",17,null],[13,"Gc","","",17,null],[13,"Clear","","",17,null],[11,"into_owned","","Make <code>\'static</code> [<code>Event</code>] by cloning message if needed",17,[[],["event",4]]],[8,"EventLog","","",null,null],[11,"from_log","","",18,[[]]],[10,"apply_log","","",18,[[]]],[0,"replication","spartan::node","Database replication",null,null],[0,"storage","spartan::node::replication","Replication storage (event log)",null,null],[4,"ReplicationStorage","spartan::node::replication::storage","",null,null],[13,"Primary","","",19,null],[13,"Replica","","",19,null],[11,"get_primary","","",19,[[],["primarystorage",3]]],[11,"get_replica","","",19,[[],["replicastorage",3]]],[11,"map_primary","","",19,[[]]],[0,"message","spartan::node::replication","Replication TCP messages",null,null],[4,"PrimaryRequest","spartan::node::replication::message","",null,null],[13,"Ping","","",20,null],[13,"AskIndex","","",20,null],[13,"SendRange","","",20,null],[4,"ReplicaRequest","","",null,null],[13,"Pong","","",21,null],[13,"RecvIndex","","",21,null],[13,"RecvRange","","",21,null],[13,"QueueNotFound","","",21,null],[4,"Request","","",null,null],[13,"Primary","","",22,null],[13,"Replica","","",22,null],[11,"get_primary","","",22,[[],[["primaryrequest",4],["option",4]]]],[11,"get_replica","","",22,[[],[["option",4],["replicarequest",4]]]],[0,"primary","spartan::node::replication","Primary node",null,null],[0,"error","spartan::node::replication::primary","Primary error",null,null],[4,"PrimaryError","spartan::node::replication::primary::error","",null,null],[13,"CodecError","","",23,null],[13,"SocketError","","",23,null],[13,"EmptySocket","","",23,null],[13,"ProtocolMismatch","","",23,null],[13,"VersionMismatch","","",23,null],[13,"IndexMismatch","","",23,null],[13,"QueueConfigMismatch","","",23,null],[6,"PrimaryResult","","",null,null],[0,"index","spartan::node::replication::primary","Queue index exchange",null,null],[3,"RecvIndex","spartan::node::replication::primary::index","",null,null],[12,"stream","","",24,null],[12,"indexes","","",24,null],[11,"new","","",24,[[["box",3],["stream",3]]]],[11,"sync","","",24,[[["manager",3]]]],[3,"BatchAskIndex","","",null,null],[12,"batch","","",25,null],[11,"with_capacity","","",25,[[]]],[11,"push","","",25,[[["recvindex",3]]]],[11,"sync","","",25,[[["manager",3]]]],[3,"Sync","","",null,null],[12,"batch_ask_index","","",26,null],[11,"new","","",26,[[["batchaskindex",3]]]],[11,"set_gc","","Set GC threshold of each queue to minimal index of all …",26,[[["manager",3]]]],[0,"stream","spartan::node::replication::primary","Network stream",null,null],[3,"Stream","spartan::node::replication::primary::stream","",null,null],[12,"0","","",27,null],[3,"StreamPool","","",null,null],[12,"0","","",28,null],[11,"exchange","","",27,[[["primaryrequest",4]]]],[11,"ping","","",27,[[]]],[11,"ask","","",27,[[]]],[11,"send_range","","",27,[[["box",3]]]],[11,"from_config","","",28,[[["primary",3]]]],[11,"new","","",28,[[]]],[11,"ping","","",28,[[]]],[11,"ask","","",28,[[]]],[0,"storage","spartan::node::replication::primary","Primary node storage",null,null],[3,"PrimaryStorage","spartan::node::replication::primary::storage","",null,null],[12,"next_index","","",29,null],[12,"gc_threshold","","",29,null],[12,"log","","",29,null],[11,"push","","",29,[[["event",4]]]],[11,"gc","","",29,[[]]],[11,"slice","","Get event log slice",29,[[],[["box",3],["option",4]]]],[11,"set_gc_threshold","","",29,[[]]],[0,"replica","spartan::node::replication","Replica node",null,null],[0,"error","spartan::node::replication::replica","Replica error",null,null],[4,"ReplicaError","spartan::node::replication::replica::error","",null,null],[13,"ReplicaConfigNotFound","","",30,null],[13,"SocketError","","",30,null],[13,"EmptySocket","","",30,null],[13,"CodecError","","",30,null],[13,"ProtocolMismatch","","",30,null],[13,"PersistenceError","","",30,null],[6,"ReplicaResult","","",null,null],[0,"storage","spartan::node::replication::replica","Replica node storage",null,null],[3,"ReplicaStorage","spartan::node::replication::replica::storage","",null,null],[12,"confirmed_index","","",31,null],[11,"get_index","","",31,[[]]],[11,"confirm","","",31,[[]]],[3,"ReplicaSocket","spartan::node::replication::replica","",null,null],[12,"manager","","",32,null],[12,"config","","",32,null],[12,"socket","","",32,null],[11,"new","","",32,[[["manager",3],["replica",3]]]],[11,"exchange","","",32,[[]]],[11,"process","","",32,[[]]],[5,"accept_connection","","",null,[[["manager",3],["primaryrequest",4]]]],[6,"DB","spartan::node","",null,null],[3,"Node","","Key-value node implementation",null,null],[12,"db","","Node database",33,null],[11,"queue","","Get node queue entry",33,[[],[["queue",3],["option",4]]]],[11,"add","","Add default queue entry to node",33,[[]]],[11,"add_db","","Add queue entry to node",33,[[["treedatabase",3],["queue",3]]]],[11,"iter","","Iterate over queues in Node",33,[[]]],[11,"load_from_config","","Load queues from config",33,[[["config",3]]]],[11,"prepare_replication","","",33,[[]]],[0,"http","spartan","HTTP server and query structs",null,null],[0,"query","spartan::http","HTTP requests and responses",null,null],[0,"delete","spartan::http::query","",null,null],[3,"DeleteRequest","spartan::http::query::delete","",null,null],[12,"id","","",34,null],[3,"DeleteResponse","","",null,null],[12,"message","","",35,null],[0,"pop","spartan::http::query","",null,null],[3,"Timeout","spartan::http::query::pop","",null,null],[12,"max","","",36,null],[12,"obtained_at","","",36,null],[3,"Time","","",null,null],[12,"dispatched_at","","",37,null],[12,"delay","","",37,null],[12,"timeout","","",37,null],[3,"PopResponse","","",null,null],[12,"id","","",38,null],[12,"body","","",38,null],[12,"state","","",38,null],[12,"time","","",38,null],[0,"push","spartan::http::query","",null,null],[3,"PushRequest","spartan::http::query::push","",null,null],[12,"body","","",39,null],[12,"offset","","",39,null],[12,"max_tries","","",39,null],[12,"timeout","","",39,null],[12,"delay","","",39,null],[0,"requeue","spartan::http::query","",null,null],[3,"RequeueRequest","spartan::http::query::requeue","",null,null],[12,"id","","",40,null],[0,"size","spartan::http::query","",null,null],[3,"SizeResponse","spartan::http::query::size","",null,null],[12,"size","","",41,null],[0,"server","spartan::http","HTTP server",null,null],[4,"ServerError","spartan::http::server","",null,null],[13,"Internal","","",42,null],[5,"start_http_server","","Start HTTP server with shared manager",null,[[["arc",3],["manager",3],["socketaddr",4]]]],[0,"middleware","spartan::http","HTTP middlewares",null,null],[0,"access","spartan::http::middleware","Queue access middleware",null,null],[4,"AccessError","spartan::http::middleware::access","",null,null],[13,"AccessDenied","","",43,null],[13,"AuthorizationHeaderNotFound","","",43,null],[13,"IncorrectKeyHeader","","",43,null],[3,"AccessMiddleware","","",null,null],[12,"config","","",44,null],[5,"access","","",null,[[]]],[11,"new","","",44,[[["config",3]]]],[11,"parse_request","","",44,[[["string",3],["option",4]],[["result",4],["accesserror",4]]]],[11,"check_access","","",44,[[],[["result",4],["accesserror",4]]]],[11,"has_access_keys","","",44,[[]]],[0,"routing","spartan::http","Actix routing",null,null],[5,"with_manager","spartan::http::routing","",null,[[["arc",3],["manager",3]]]],[5,"attach_routes","","Attach routes to Actix service config",null,[[["arc",3],["manager",3]]]],[5,"handle_rejections","","",null,[[["rejection",3]]]],[0,"config","spartan","Configuration",null,null],[0,"key","spartan::config","Queue access key",null,null],[17,"WILDCARD_QUEUE","spartan::config::key","Wildcard queue name. Used in <code>queues</code> to represent all …",null,null],[3,"Key","","Single access key",null,null],[12,"key","","Key value. Passed in request as Bearer token.",45,null],[12,"queues","","Set of queues, that key has access to",45,null],[11,"has_queue","","Check if user of key has access to provided queue, or if …",45,[[]]],[0,"replication","spartan::config","Replication config",null,null],[5,"default_replication_timer","spartan::config::replication","Default amount of seconds between replication jobs",null,[[]]],[5,"default_primary_try_timer","","Default amount of seconds between replication job restart …",null,[[]]],[5,"default_replica_try_timer","","Default amount of seconds between replica command restart …",null,[[]]],[3,"Primary","","",null,null],[12,"destination","","",46,null],[12,"replication_timer","","",46,null],[12,"try_timer","","",46,null],[3,"Replica","","",null,null],[12,"host","","",47,null],[12,"try_timer","","",47,null],[4,"Replication","","",null,null],[13,"Primary","","",48,null],[13,"Replica","","",48,null],[3,"ReplicationConfig","","",null,null],[12,"mode","","Replication mode",49,null],[12,"primary","","Primary node config",49,null],[12,"replica","","Replica node config",49,null],[0,"persistence","spartan::config","Persistence config",null,null],[5,"default_persistence","spartan::config::persistence","",null,[[],["persistence",4]]],[5,"default_path","","Default database path",null,[[],[["cow",4],["path",3]]]],[5,"default_snapshot_timer","","Default amount of seconds between persistence jobs",null,[[]]],[5,"default_compaction","","",null,[[]]],[4,"Persistence","","",null,null],[13,"Log","","",50,null],[13,"Snapshot","","",50,null],[3,"PersistenceConfig","","",null,null],[12,"mode","","Persistence mode",51,null],[12,"path","","Database path",51,null],[12,"timer","","Amount of seconds between snapshot creation",51,null],[12,"compaction","","Log compaction on queue restoring from FS",51,null],[5,"default_gc_timer","spartan::config","Default amount of seconds between GC jobs",null,[[]]],[5,"default_persistence","","",null,[[],["persistenceconfig",3]]],[5,"serialize_persistence","","",null,[[["option",4]],["result",4]]],[3,"Config","","Server configuration",null,null],[12,"body_size","","Max body size in bytes",52,null],[12,"gc_timer","","Amount of seconds between GC jobs",52,null],[12,"queues","","Array of queues",52,null],[12,"encryption_key","","Persistence encryption key",52,null],[12,"access_keys","","Queue access keys",52,null],[12,"replication","","Replication config",52,null],[12,"persistence","","Persistence config",52,null],[0,"jobs","spartan","Background jobs",null,null],[0,"gc","spartan::jobs","GC handler",null,null],[5,"execute_gc","spartan::jobs::gc","Concurrently iterates over all databases in node, and …",null,[[["manager",3]]]],[5,"spawn_gc","","GC job spawner",null,[[["manager",3]]]],[0,"persistence","spartan::jobs","Persistence handler",null,null],[5,"spawn_persistence","spartan::jobs::persistence","Persistence job spawner",null,[[["manager",3]]]],[0,"replication","spartan::jobs","Replication job",null,null],[5,"replicate_manager","spartan::jobs::replication","",null,[[["streampool",3],["manager",3]]]],[5,"start_replication","","",null,[[["streampool",3],["primary",3],["manager",3]]]],[5,"spawn_replication","","Spawn replication job",null,[[["manager",3]]]],[0,"utils","spartan","Utilities for easier development",null,null],[0,"codec","spartan::utils","",null,null],[3,"BincodeCodec","spartan::utils::codec","",null,null],[17,"VERSION","spartan","",null,null],[7,"SERVER","","",null,null],[5,"main","","",null,[[],[["error",3],["result",4]]]],[14,"dispatch_jobs","","",null,null],[11,"from","spartan::actions","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","spartan::cli::commands::start","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","spartan::cli::commands::init","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","spartan::cli::commands::replica","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","spartan::cli","",8,[[]]],[11,"into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"from","spartan::node::manager","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","spartan::node::queue","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","spartan::node::persistence::log","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","spartan::node::persistence::snapshot","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","spartan::node::persistence","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","spartan::node::event","",17,[[]]],[11,"into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","spartan::node::replication::storage","",19,[[]]],[11,"into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","spartan::node::replication::message","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","spartan::node::replication::primary::error","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_string","","",23,[[],["string",3]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","spartan::node::replication::primary::index","",24,[[]]],[11,"into","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","spartan::node::replication::primary::stream","",27,[[]]],[11,"into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","spartan::node::replication::primary::storage","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","spartan::node::replication::replica::error","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"from","spartan::node::replication::replica::storage","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","spartan::node::replication::replica","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"from","spartan::node","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"from","spartan::http::query::delete","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","spartan::http::query::pop","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"vzip","","",37,[[]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"vzip","","",38,[[]]],[11,"from","spartan::http::query::push","",39,[[]]],[11,"into","","",39,[[]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"vzip","","",39,[[]]],[11,"from","spartan::http::query::requeue","",40,[[]]],[11,"into","","",40,[[]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"vzip","","",40,[[]]],[11,"from","spartan::http::query::size","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"vzip","","",41,[[]]],[11,"from","spartan::http::server","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_string","","",42,[[],["string",3]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"from","spartan::http::middleware::access","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"to_string","","",43,[[],["string",3]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"vzip","","",44,[[]]],[11,"from","spartan::config::key","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"vzip","","",45,[[]]],[11,"equivalent","","",45,[[]]],[11,"from","spartan::config::replication","",46,[[]]],[11,"into","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"vzip","","",47,[[]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","spartan::config::persistence","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"vzip","","",50,[[]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"from","spartan::config","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","spartan::utils::codec","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"status_code","spartan::actions","",2,[[],["statuscode",3]]],[11,"status_code","spartan::node::manager","",10,[[],["statuscode",3]]],[11,"status_code","spartan::http::middleware::access","",43,[[],["statuscode",3]]],[11,"from","spartan::actions","",0,[[]]],[11,"from","","",2,[[["buildererror",4]]]],[11,"from","spartan::node::persistence","",16,[[["ioerror",3]]]],[11,"from","spartan::node::replication::primary::error","",23,[[["box",3],["errorkind",4]]]],[11,"from","","",23,[[["ioerror",3]]]],[11,"from","spartan::node::replication::replica::error","",30,[[["ioerror",3]]]],[11,"from","","",30,[[["box",3],["errorkind",4]]]],[11,"from","","",30,[[["persistenceerror",4]]]],[11,"from","spartan::http::query::delete","",35,[[["message",3]]]],[11,"from","spartan::http::query::pop","",38,[[["message",3]]]],[11,"from","spartan::http::query::size","",41,[[]]],[11,"from","spartan::http::server","",42,[[["error",3]]]],[11,"clone","spartan::node::persistence::snapshot","",14,[[],["persistmode",4]]],[11,"clone","spartan::http::middleware::access","",43,[[],["accesserror",4]]],[11,"clone","spartan::config::key","",45,[[],["key",3]]],[11,"default","spartan::node::queue","",12,[[]]],[11,"default","spartan::node::replication::primary::storage","",29,[[]]],[11,"default","spartan::node::replication::replica::storage","",31,[[]]],[11,"default","spartan::node","",33,[[],["node",3]]],[11,"default","spartan::config::persistence","",51,[[]]],[11,"default","spartan::config","",52,[[]]],[11,"default","spartan::utils::codec","",53,[[],["bincodecodec",3]]],[11,"eq","spartan::config::key","",45,[[]]],[11,"fmt","spartan::actions","",2,[[["formatter",3]],["result",6]]],[11,"fmt","spartan::cli::commands::start","",3,[[["formatter",3]],["result",6]]],[11,"fmt","spartan::cli::commands::init","",5,[[["formatter",3]],["result",6]]],[11,"fmt","spartan::node::manager","",10,[[["formatter",3]],["result",6]]],[11,"fmt","spartan::node::persistence","",16,[[["formatter",3]],["result",6]]],[11,"fmt","spartan::node::replication::primary::error","",23,[[["formatter",3]],["result",6]]],[11,"fmt","spartan::node::replication::replica::error","",30,[[["formatter",3]],["result",6]]],[11,"fmt","spartan::http::server","",42,[[["formatter",3]],["result",6]]],[11,"fmt","spartan::http::middleware::access","",43,[[["formatter",3]],["result",6]]],[11,"fmt","spartan::actions","",2,[[["formatter",3]],["result",6]]],[11,"fmt","spartan::cli::commands::start","",3,[[["formatter",3]],["result",6]]],[11,"fmt","spartan::cli::commands::init","",5,[[["formatter",3]],["result",6]]],[11,"fmt","spartan::node::manager","",10,[[["formatter",3]],["result",6]]],[11,"fmt","spartan::node::persistence","",16,[[["formatter",3]],["result",6]]],[11,"fmt","spartan::node::replication::primary::error","",23,[[["formatter",3]],["result",6]]],[11,"fmt","spartan::node::replication::replica::error","",30,[[["formatter",3]],["result",6]]],[11,"fmt","spartan::http::server","",42,[[["formatter",3]],["result",6]]],[11,"fmt","spartan::http::middleware::access","",43,[[["formatter",3]],["result",6]]],[11,"hash","spartan::config::key","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"source","spartan::actions","",2,[[],[["option",4],["error",8]]]],[11,"source","spartan::node::replication::primary::error","",23,[[],[["option",4],["error",8]]]],[11,"source","spartan::node::replication::replica::error","",30,[[],[["option",4],["error",8]]]],[11,"source","spartan::http::server","",42,[[],[["option",4],["error",8]]]],[11,"deserialize","spartan::node::event","",17,[[],["result",4]]],[11,"deserialize","spartan::node::replication::storage","",19,[[],["result",4]]],[11,"deserialize","spartan::node::replication::message","",20,[[],["result",4]]],[11,"deserialize","","",21,[[],["result",4]]],[11,"deserialize","","",22,[[],["result",4]]],[11,"deserialize","spartan::node::replication::primary::storage","",29,[[],["result",4]]],[11,"deserialize","spartan::node::replication::replica::storage","",31,[[],["result",4]]],[11,"deserialize","spartan::http::query::delete","",34,[[],["result",4]]],[11,"deserialize","spartan::http::query::push","",39,[[],["result",4]]],[11,"deserialize","spartan::http::query::requeue","",40,[[],["result",4]]],[11,"deserialize","spartan::config::key","",45,[[],["result",4]]],[11,"deserialize","spartan::config::replication","",46,[[],["result",4]]],[11,"deserialize","","",47,[[],["result",4]]],[11,"deserialize","","",48,[[],["result",4]]],[11,"deserialize","","",49,[[],["result",4]]],[11,"deserialize","spartan::config::persistence","",50,[[],["result",4]]],[11,"deserialize","","",51,[[],["result",4]]],[11,"deserialize","spartan::config","",52,[[],["result",4]]],[11,"serialize","spartan::node::event","",17,[[],["result",4]]],[11,"serialize","spartan::node::replication::storage","",19,[[],["result",4]]],[11,"serialize","spartan::node::replication::message","",20,[[],["result",4]]],[11,"serialize","","",21,[[],["result",4]]],[11,"serialize","","",22,[[],["result",4]]],[11,"serialize","spartan::node::replication::primary::storage","",29,[[],["result",4]]],[11,"serialize","spartan::node::replication::replica::storage","",31,[[],["result",4]]],[11,"serialize","spartan::http::query::delete","",35,[[],["result",4]]],[11,"serialize","spartan::http::query::pop","",36,[[],["result",4]]],[11,"serialize","","",37,[[],["result",4]]],[11,"serialize","","",38,[[],["result",4]]],[11,"serialize","spartan::http::query::size","",41,[[],["result",4]]],[11,"serialize","spartan::config::key","",45,[[],["result",4]]],[11,"serialize","spartan::config::replication","",46,[[],["result",4]]],[11,"serialize","","",47,[[],["result",4]]],[11,"serialize","","",48,[[],["result",4]]],[11,"serialize","","",49,[[],["result",4]]],[11,"serialize","spartan::config::persistence","",50,[[],["result",4]]],[11,"serialize","","",51,[[],["result",4]]],[11,"serialize","spartan::config","",52,[[],["result",4]]],[11,"into_response","spartan::actions","",0,[[],["response",6]]],[11,"decode","spartan::utils::codec","",53,[[["bytesmut",3]],[["option",4],["result",4]]]],[11,"encode","","",53,[[["bytesmut",3]],["result",4]]],[11,"clap","spartan::cli::commands::start","",4,[[],["app",3]]],[11,"from_clap","","",4,[[["argmatches",3]]]],[11,"clap","spartan::cli::commands::init","",6,[[],["app",3]]],[11,"from_clap","","",6,[[["argmatches",3]]]],[11,"clap","spartan::cli::commands::replica","",7,[[],["app",3]]],[11,"from_clap","","",7,[[["argmatches",3]]]],[11,"clap","spartan::cli","",8,[[],["app",3]]],[11,"from_clap","","",8,[[["argmatches",3]]]],[11,"clap","","",9,[[],["app",3]]],[11,"from_clap","","",9,[[["argmatches",3]]]],[11,"augment_clap","spartan::cli::commands::start","",4,[[["app",3]],["app",3]]],[11,"is_subcommand","","",4,[[]]],[11,"augment_clap","spartan::cli::commands::init","",6,[[["app",3]],["app",3]]],[11,"is_subcommand","","",6,[[]]],[11,"augment_clap","spartan::cli::commands::replica","",7,[[["app",3]],["app",3]]],[11,"is_subcommand","","",7,[[]]],[11,"augment_clap","spartan::cli","",8,[[["app",3]],["app",3]]],[11,"from_subcommand","","",8,[[],["option",4]]],[11,"is_subcommand","","",8,[[]]],[11,"augment_clap","","",9,[[["app",3]],["app",3]]],[11,"is_subcommand","","",9,[[]]]],"p":[[3,"ResponseError"],[8,"RespondableError"],[4,"QueueError"],[4,"StartCommandError"],[3,"StartCommand"],[4,"InitCommandError"],[3,"InitCommand"],[3,"ReplicaCommand"],[4,"Command"],[3,"Server"],[4,"ManagerError"],[3,"Manager"],[3,"Queue"],[3,"Log"],[4,"PersistMode"],[3,"Snapshot"],[4,"PersistenceError"],[4,"Event"],[8,"EventLog"],[4,"ReplicationStorage"],[4,"PrimaryRequest"],[4,"ReplicaRequest"],[4,"Request"],[4,"PrimaryError"],[3,"RecvIndex"],[3,"BatchAskIndex"],[3,"Sync"],[3,"Stream"],[3,"StreamPool"],[3,"PrimaryStorage"],[4,"ReplicaError"],[3,"ReplicaStorage"],[3,"ReplicaSocket"],[3,"Node"],[3,"DeleteRequest"],[3,"DeleteResponse"],[3,"Timeout"],[3,"Time"],[3,"PopResponse"],[3,"PushRequest"],[3,"RequeueRequest"],[3,"SizeResponse"],[4,"ServerError"],[4,"AccessError"],[3,"AccessMiddleware"],[3,"Key"],[3,"Primary"],[3,"Replica"],[4,"Replication"],[3,"ReplicationConfig"],[4,"Persistence"],[3,"PersistenceConfig"],[3,"Config"],[3,"BincodeCodec"]]},\
"spartan_lib":{"doc":"","i":[[0,"core","spartan_lib","Core components",null,null],[0,"db","spartan_lib::core","Database interface and it\'s implementations",null,null],[3,"TreeDatabase","spartan_lib::core::db","Tree-based database",null,null],[3,"VecDatabase","","[<code>Vec</code>]-based database",null,null],[8,"Database","","Interface for working with databases",null,null],[16,"PositionKey","","",0,null],[10,"push_raw","","Push raw message to database",0,[[]]],[10,"position","","Get database position key of the first message, that …",0,[[],["option",4]]],[10,"get","","Get shared message reference by database position key",0,[[],["option",4]]],[10,"get_mut","","Get mutable message reference by database position key",0,[[],["option",4]]],[10,"delete_pos","","Delete message by database position key",0,[[],["option",4]]],[10,"retain","","Retain only messages, that match predicate",0,[[]]],[10,"len","","Get database size",0,[[]]],[10,"is_empty","","Check if database is empty",0,[[]]],[10,"clear","","Remove all database messages",0,[[]]],[8,"StatusAwareDatabase","","Interface for working with databases, that support status …",null,null],[16,"RequeueKey","","",1,null],[10,"reserve","","Reserve message in database",1,[[],["option",4]]],[10,"requeue","","Requeue message back to database",1,[[],["option",4]]],[0,"dispatcher","spartan_lib::core","Queue dispatchers",null,null],[8,"Delete","spartan_lib::core::dispatcher","Interface for deleting messages from queue, where …",null,null],[10,"delete","","Delete message from queue",2,[[],["option",4]]],[8,"PositionBasedDelete","","Interface for deleting messages from queue, where …",null,null],[10,"delete","","Delete message from queue",3,[[],["option",4]]],[8,"SimpleDispatcher","","Interface for working with database as message queue",null,null],[10,"push","","Push message to queue",4,[[]]],[10,"peek","","Get message from queue",4,[[],["option",4]]],[10,"gc","","Start GC cycle on queue",4,[[]]],[10,"size","","Get queue size",4,[[]]],[10,"clear","","Clear all queue messages",4,[[]]],[8,"StatusAwareDispatcher","","Interface for working with databases that support statuses",null,null],[10,"pop","","Pop message from queue",5,[[],["option",4]]],[10,"requeue","","Requeue message in queue",5,[[],["option",4]]],[0,"message","spartan_lib::core","Message implementation",null,null],[0,"builder","spartan_lib::core::message","Message builder",null,null],[4,"BuilderError","spartan_lib::core::message::builder","",null,null],[13,"BodyNotProvided","","",6,null],[13,"OffsetOutOfBounds","","",6,null],[3,"MessageBuilder","","Message builder",null,null],[11,"body","","Message body.",7,[[]]],[11,"offset","","Timezone offset in seconds.",7,[[]]],[11,"max_tries","","Max tries for message to be reserved.",7,[[]]],[11,"timeout","","Message timeout. Used by GC to collect messages that …",7,[[]]],[11,"delay","","Set message delay in seconds.",7,[[]]],[11,"compose","","Compose message. Returns Err, if body was not provided.",7,[[],[["buildererror",4],["result",4],["message",3]]]],[3,"State","spartan_lib::core::message","Message state, containing try count and status",null,null],[4,"Status","","Message status",null,null],[13,"Available","","Message is available for reserving, if it still has any …",8,null],[13,"Transit","","Message is currently being processed, and thus is …",8,null],[3,"Offset","","Timezone offset type wrapper for [<code>i32</code>]",null,null],[3,"Time","","A time manager for handling message dispatch times, …",null,null],[3,"Timeout","","Message timeout options",null,null],[3,"Message","","Default message implementation, with support of all …",null,null],[11,"state","","Get current message <code>State</code>",9,[[],["state",3]]],[11,"time","","Get message <code>Time</code>",9,[[],["time",3]]],[0,"payload","spartan_lib::core","Interfaces for working with queue payload",null,null],[8,"Dispatchable","spartan_lib::core::payload","Interface for working with dispatchable messages",null,null],[16,"Body","","Body type of dispatchable message",10,null],[10,"obtainable","","Check if current message is obtainable",10,[[]]],[10,"body","","Get message body",10,[[]]],[10,"gc","","Check if current message is garbage",10,[[]]],[8,"Identifiable","","Interface for working with identifiable messages",null,null],[16,"Id","","",11,null],[10,"id","","Get message ID",11,[[]]],[8,"Sortable","","Interface for working with sortable messages",null,null],[16,"Sort","","",12,null],[10,"sort","","Get message sort key. It\'s used for message …",12,[[]]],[8,"Status","","Interface for interacting with message status",null,null],[10,"requeue","","Change message status to available",13,[[]]],[10,"reserve","","Change message status to \\\"in transit\\\"",13,[[]]],[10,"requeueable","","Check if message can be requeued",13,[[]]],[10,"reservable","","Check if message can be reserved",13,[[]]],[10,"has_tries","","Check if message has available tries",13,[[]]],[11,"from","spartan_lib::core::db","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"vzip","","",14,[[]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"vzip","","",15,[[]]],[11,"from","spartan_lib::core::message::builder","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_string","","",6,[[],["string",3]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","spartan_lib::core::message","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"vzip","","",16,[[]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"vzip","","",17,[[]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"vzip","","",18,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"vzip","","",8,[[]]],[11,"equivalent","","",8,[[]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"vzip","","",9,[[]]],[11,"push_raw","spartan_lib::core::db","",14,[[]]],[11,"position","","",14,[[],["option",4]]],[11,"get","","",14,[[],["option",4]]],[11,"get_mut","","",14,[[],["option",4]]],[11,"delete_pos","","",14,[[],["option",4]]],[11,"retain","","",14,[[]]],[11,"len","","",14,[[]]],[11,"is_empty","","",14,[[]]],[11,"clear","","",14,[[]]],[11,"push_raw","","",15,[[]]],[11,"position","","",15,[[],["option",4]]],[11,"get","","",15,[[],["option",4]]],[11,"get_mut","","",15,[[],["option",4]]],[11,"delete_pos","","",15,[[],["option",4]]],[11,"retain","","",15,[[]]],[11,"len","","",15,[[]]],[11,"is_empty","","",15,[[]]],[11,"clear","","",15,[[]]],[11,"reserve","","",14,[[],["option",4]]],[11,"requeue","","",14,[[],["option",4]]],[11,"reserve","","",15,[[],["option",4]]],[11,"requeue","","",15,[[],["option",4]]],[11,"obtainable","spartan_lib::core::message","",9,[[]]],[11,"body","","",9,[[]]],[11,"gc","","",9,[[]]],[11,"id","","",9,[[],["uuid",3]]],[11,"sort","","",9,[[]]],[11,"requeue","","",9,[[]]],[11,"reserve","","",9,[[]]],[11,"requeueable","","",9,[[]]],[11,"reservable","","",9,[[]]],[11,"has_tries","","",9,[[]]],[11,"clone","","",16,[[],["timeout",3]]],[11,"clone","","",17,[[],["offset",3]]],[11,"clone","","",18,[[],["time",3]]],[11,"clone","","",8,[[],["status",4]]],[11,"clone","","",19,[[],["state",3]]],[11,"clone","","",9,[[],["message",3]]],[11,"default","spartan_lib::core::db","",14,[[]]],[11,"default","","",15,[[]]],[11,"default","spartan_lib::core::message::builder","",7,[[]]],[11,"default","spartan_lib::core::message","",8,[[],["status",4]]],[11,"eq","","",8,[[["status",4]]]],[11,"fmt","spartan_lib::core::db","",15,[[["formatter",3]],["result",6]]],[11,"fmt","spartan_lib::core::message::builder","",6,[[["formatter",3]],["result",6]]],[11,"fmt","spartan_lib::core::message","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","spartan_lib::core::message::builder","",6,[[["formatter",3]],["result",6]]],[11,"serialize","spartan_lib::core::db","",14,[[],["result",4]]],[11,"serialize","","",15,[[],["result",4]]],[11,"serialize","spartan_lib::core::message","",16,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"serialize","","",18,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","","",19,[[],["result",4]]],[11,"serialize","","",9,[[],["result",4]]],[11,"deserialize","spartan_lib::core::db","",14,[[],["result",4]]],[11,"deserialize","","",15,[[],["result",4]]],[11,"deserialize","spartan_lib::core::message","",16,[[],["result",4]]],[11,"deserialize","","",17,[[],["result",4]]],[11,"deserialize","","",18,[[],["result",4]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","","",19,[[],["result",4]]],[11,"deserialize","","",9,[[],["result",4]]],[11,"max","","Get max timeout in seconds",16,[[]]],[11,"obtained_at","","Get message obtain time",16,[[],["option",4]]],[11,"get","","",17,[[]]],[11,"offset","","Get message timezone offset.",18,[[],["offset",3]]],[11,"dispatched_at","","Get message dispatch time with offset awareness.",18,[[],["datetime",3]]],[11,"delay","","Get message availability time.",18,[[],["option",4]]],[11,"timeout","","Get message timeout options.",18,[[],["timeout",3]]],[11,"status","","Get current message status",19,[[],["status",4]]],[11,"tries","","Get message current tries",19,[[]]],[11,"max_tries","","Get message max tries",19,[[]]]],"p":[[8,"Database"],[8,"StatusAwareDatabase"],[8,"Delete"],[8,"PositionBasedDelete"],[8,"SimpleDispatcher"],[8,"StatusAwareDispatcher"],[4,"BuilderError"],[3,"MessageBuilder"],[4,"Status"],[3,"Message"],[8,"Dispatchable"],[8,"Identifiable"],[8,"Sortable"],[8,"Status"],[3,"TreeDatabase"],[3,"VecDatabase"],[3,"Timeout"],[3,"Offset"],[3,"Time"],[3,"State"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);